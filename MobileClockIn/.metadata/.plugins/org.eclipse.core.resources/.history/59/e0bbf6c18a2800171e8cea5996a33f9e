package ua.server;

import java.util.Properties;  

import javax.sql.DataSource;  
  
import org.apache.tomcat.dbcp.dbcp.BasicDataSource;  
import org.hibernate.SessionFactory;  
import org.springframework.beans.factory.annotation.Autowired;  
import org.springframework.context.annotation.Bean;  
import org.springframework.context.annotation.ComponentScan;  
import org.springframework.context.annotation.Configuration;  
import org.springframework.context.annotation.PropertySource;  
import org.springframework.core.env.Environment;  
import org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor;  
import org.springframework.orm.hibernate4.HibernateTransactionManager;  
import org.springframework.orm.hibernate4.LocalSessionFactoryBean;  
import org.springframework.transaction.annotation.EnableTransactionManagement;  
  
@Configuration  
@EnableTransactionManagement  
@PropertySource({ "application.properties" })  
@ComponentScan({ "ua.server" })  
public class PersistenceConfig  
{  
    @Autowired  
  private Environment env;  
  
  @Bean  
  public LocalSessionFactoryBean sessionFactory() {  
     LocalSessionFactoryBean sessionFactory = new LocalSessionFactoryBean();  
     sessionFactory.setDataSource(restDataSource());  
     sessionFactory.setPackagesToScan(new String[] { "com.howtoprogramwithjava.example" });  
     sessionFactory.setHibernateProperties(hibernateProperties());  
  
     return sessionFactory;  
  }  
  

  
  @Bean  
  @Autowired  
  public HibernateTransactionManager transactionManager(SessionFactory sessionFactory) {  
     HibernateTransactionManager txManager = new HibernateTransactionManager();  
     txManager.setSessionFactory(sessionFactory);  
  
     return txManager;  
  }  
  
  @Bean  
  public PersistenceExceptionTranslationPostProcessor exceptionTranslation() {  
     return new PersistenceExceptionTranslationPostProcessor();  
  }  
  
  Properties hibernateProperties() {  
     return new Properties() {  
        {  
           setProperty("hibernate.hbm2ddl.auto", env.getProperty("hibernate.hbm2ddl.auto"));  
           setProperty("hibernate.dialect", env.getProperty("hibernate.dialect"));  
           setProperty("hibernate.globally_quoted_identifiers", "true");  
        }  
     };  
  }  
}  
